{"version":3,"sources":["components/Button/button.tsx","components/Alert/alert.tsx","components/Menu/menu.tsx","components/Menu/menuItem.tsx","components/Menu/subMenu.tsx","components/Icon/icon.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","className","btnType","disabled","size","children","href","restProps","classes","classNames","defaultProps","Alert","React","useState","closed","setClosed","type","title","desc","closeable","onClose","onClick","afterClose","handleClose","e","renderCloseIcon","MenuContext","createContext","index","Menu","defaultIndex","mode","style","onSelect","defaultOpenSubMenus","currentActive","setActive","passedContext","data-testid","Provider","value","Children","map","child","childElement","displayName","cloneElement","toString","console","error","MenuItem","context","useContext","SubMenu","toggleTimer","openedSubMenus","isOpened","includes","menuOpened","setMenuOpened","handleMouse","toggle","clearTimeout","preventDefault","setTimeout","clickEvents","hoverEvents","onMouseEnter","onMouseLeave","subMenuClasses","childrenComponent","i","renderChildren","library","add","fas","Icon","theme","App","alert","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05d3c5aa.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport type ButtonSize = 'lg' | 'sm'\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n\n\ninterface BaseButtonProps {\n    className?: string;\n    disabled?: boolean;\n    size?: ButtonSize;\n    btnType?: ButtonType;\n    children?: React.ReactNode;\n    href?: string;\n}\n\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<AnchorButtonProps & NativeButtonProps>\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    const { \n        className,\n        btnType,\n        disabled,\n        size,\n        children,\n        href,\n        ...restProps\n     } = props\n    const classes = classNames('btn', className,{\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === 'link') && disabled\n    })\n    if(btnType === 'link' && href ) {\n        return (\n            <a\n            className = {classes}\n            href={href}\n            {...restProps}\n            >\n                {children}\n            </a>\n        )\n    } else {\n        return (\n            <button \n            className={classes}\n            disabled={disabled}\n            {...restProps}\n            >\n                {children}\n            </button>\n        )\n    }\n}\n\nButton.defaultProps = {\n    disabled: false,\n    btnType: 'default'\n}\nexport default Button","import React from 'react'\nimport classNames from 'classnames';\n\nexport type AlertType = 'success' | 'error' | 'warning' | 'info';\n\nexport interface BaseAlertProps {\n    type?: AlertType;\n    title?: string;\n    desc?: string;\n    className?: string;\n    closeable?: boolean;\n    onClick?: React.MouseEventHandler<HTMLDivElement>;\n    onClose?: React.MouseEventHandler<HTMLButtonElement>;\n    afterClose?: () => void;\n}\n\n// type AlertProps = BaseAlertProps\n\nconst Alert: React.FC<BaseAlertProps> = (props) => {\n    const [closed, setClosed] = React.useState(false);\n    const {\n        type,\n        title,\n        desc,\n        className,\n        closeable,\n        onClose,\n        onClick,\n        afterClose,\n        ...restProps\n    } = props\n    const classes = classNames('alert', className, {\n        [`alert-${type}`]: type,\n    }, {'invisible': closed})\n    const handleClose = (e:React.MouseEvent<HTMLButtonElement>) => {\n        setClosed(true)\n        props.onClose?.(e)\n    }\n    const renderCloseIcon = () => {\n        if(closeable) {\n            return (\n                <button\n                onClick={handleClose}\n                className=\"close-icon\"\n                >\n                    X\n                </button>\n            )\n        }\n    }\n    return (\n        <div className={classes} {...restProps}>\n            <div className=\"content\">\n                <div className='alert-message'>{title}</div>\n                <div className='alert-description'>{desc}</div>\n            </div>\n            {renderCloseIcon()}\n        </div>\n    )\n}\nAlert.defaultProps = {\n    type: 'info'\n}\nexport default Alert","import React, { useState, createContext } from \"react\";\nimport classNames from \"classnames\";\nimport { MenuItemProps } from './menuItem'\n\ntype MenuMode = 'horizontal' | 'vertical'\ntype SelectCallBack = (selectedIndex: string) => void\nexport interface MenuProps {\n    defaultIndex?: string;\n    className?: string;\n    mode?: MenuMode;\n    style?: React.CSSProperties;\n    onSelect?: SelectCallBack;\n    defaultOpenSubMenus?: string[];\n}\n\ninterface IMenuContext {\n    index: string;\n    mode?: MenuMode;\n    onSelect?: SelectCallBack;\n    defaultOpenSubMenus?:string[];\n}\n\nexport const MenuContext = createContext<IMenuContext>({ index: '0' })\n\nconst Menu: React.FC<MenuProps> = (props) => {\n    // props.children 表示组件的所有子节点\n    const { defaultIndex, className, mode, style, children, onSelect, defaultOpenSubMenus } = props;\n    const [currentActive, setActive] = useState(defaultIndex);\n    const classes = classNames('marmot-menu', className, {\n        'menu-vertical': mode === 'vertical',\n        'menu-horizontal': mode !== 'vertical'\n    })\n    const handleClick = (index: string) => {\n        setActive(index);\n        if (onSelect) {\n            onSelect(index)\n        }\n    }\n    const passedContext: IMenuContext = {\n        index: currentActive ? currentActive : '0',\n        onSelect: handleClick,\n        mode,\n        defaultOpenSubMenus\n    }\n    const renderChildren = () => {\n        return React.Children.map(children, (child, index) => {\n            const childElement = child as React.FunctionComponentElement<MenuItemProps>\n            const { displayName } = childElement.type\n            if (displayName === 'MenuItem' || displayName === 'SubMenu') {\n                return React.cloneElement(childElement, {\n                    index: index.toString()\n                })\n            } else {\n                console.error('Warning: Elemnts in Menu can only be Menu items')\n            }\n        })\n    }\n    return (\n        <ul className={classes} style={style} data-testid='test-menu'>\n            <MenuContext.Provider value={passedContext}>\n                {renderChildren()}\n            </MenuContext.Provider>\n        </ul>\n    )\n}\n\nMenu.defaultProps = {\n    mode: 'horizontal',\n    defaultIndex: '0',\n    defaultOpenSubMenus:[],\n}\n\nexport default Menu","import React, {useContext} from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContext } from \"./menu\";\n\nexport interface MenuItemProps {\n    index?: string;\n    disabled?: boolean;\n    className?: string;\n    style?: React.CSSProperties;\n}\n\nconst MenuItem: React.FC<MenuItemProps> = (props) => {\n    const { className, style, children, disabled, index } = props;\n    const context = useContext(MenuContext)\n    const classes = classNames('menu-item', className, {\n        'is-disabled': disabled,\n        'is-active': context.index === index\n    })\n    const handleClick = () => {\n        if(context.onSelect && !disabled && typeof index === 'string') {\n            context.onSelect(index);\n        }\n    }\n    return (\n        <li className={classes} style={style} onClick={handleClick} >\n            {children}\n        </li>\n    );\n}\n\nMenuItem.displayName = 'MenuItem'\n\nexport default MenuItem;","import React, {useContext , useState, FunctionComponentElement} from 'react'\nimport classNames from 'classnames'\nimport { MenuContext } from './menu'\nimport { MenuItemProps } from './menuItem'\n\nexport interface SubMenuProps {\n    index?:string;\n    title:string;\n    className?: string;\n}\n\nconst SubMenu:React.FC<SubMenuProps> = ({index,title,children,className})=>{\n    const context = useContext(MenuContext)\n    const openedSubMenus = context.defaultOpenSubMenus as Array<string>\n    const isOpened = (index && context.mode === 'vertical') ? openedSubMenus.includes(index) : false\n    const [menuOpened, setMenuOpened] = useState(isOpened)\n    const classes = classNames('menu-item submenu-item', className, {\n        'is-active': context.index === index\n    })\n    const handleClick = (e: React.MouseEvent) => {\n        // e.preventDefault()\n        setMenuOpened(!menuOpened)\n    }\n    let toggleTimer:any;\n    const handleMouse = (e: React.MouseEvent, toggle: boolean) => {\n        clearTimeout(toggleTimer);\n        e.preventDefault()\n        toggleTimer = setTimeout(()=>{\n            setMenuOpened(toggle)\n        },150)\n    }\n    const clickEvents = context.mode === 'vertical'? {\n        onClick: handleClick\n    } : {}\n    const hoverEvents = context.mode === 'horizontal' ? {\n        onMouseEnter: (e: React.MouseEvent) => { handleMouse(e, true) },\n        onMouseLeave: (e: React.MouseEvent) => {handleMouse(e, false)}\n    } : {}\n    const renderChildren = ()=>{\n        const subMenuClasses = classNames('marmot-submenu',{\n            'menu-opened': menuOpened\n        })\n        const childrenComponent = React.Children.map(children, (child,i)=>{\n            const childElement = child as FunctionComponentElement<MenuItemProps>\n            if(childElement.type.displayName ==='MenuItem') {\n                return React.cloneElement(childElement, {\n                    index : `${index}-${i}`\n                })\n            } else {\n                console.error('Warning: Elements in sub menu can only be menu items')\n            }\n        })\n        return <ul className={subMenuClasses}>\n            {childrenComponent}\n        </ul>\n    }\n    return (\n        <li key={index} className={classes} {...hoverEvents}>\n            <div className=\"submenu-title\" {...clickEvents}>\n                {title}\n            </div>\n            {renderChildren()}\n        </li>\n    )\n}\n\nSubMenu.displayName = 'SubMenu'\n\nexport default SubMenu","import React from \"react\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"\n\nlibrary.add(fas);\n\nexport type ThemeProps = 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' | 'light' | 'dark';\n\nexport interface IconProps extends React.ComponentProps<typeof FontAwesomeIcon> {\n    theme?: ThemeProps;\n}\n\nexport const Icon: React.FC<IconProps> = (props) => {\n    // icon-primary\n    const { className, theme, ...restProps } = props;\n    const classes = classNames('marmot-icon', className, {\n        [`icon-${theme}`]: theme,\n    })\n    return (\n        <FontAwesomeIcon className={classes} {...restProps} />\n    )\n}\n\nexport default Icon;","import React from 'react';\nimport './App.css'\nimport Button from './components/Button/button'\nimport Alert from './components/Alert/alert'\nimport Menu from './components/Menu/menu'\nimport MenuItem from './components/Menu/menuItem'\nimport SubMenu from './components/Menu/subMenu';\nimport Icon from './components/Icon/icon';\nfunction App() {\n  return (\n    // 展示Button组件\n\n    <div>\n      <div className=\"container\">\n        <Button btnType='primary' onClick={() => { alert('This is a primary button') }}>Large Primary</Button>\n        <Button btnType='danger'>Danger</Button>\n        <Button btnType='link' href='https://www.baidu.com'>Baidu</Button>\n        <Button >Default</Button>\n      </div>\n      <div className='container'>\n        <Alert type=\"success\" title=\"Success\" desc=\"Success Description\" closeable={true} onClose={() => alert('close')} />\n        <Alert type=\"info\" title=\"Info\" desc=\"Info Description\" />\n        <Alert type=\"error\" title=\"Error\" desc=\"Error Description\" />\n        <Alert type=\"warning\" title=\"Warning\" desc=\"Warning Description\" />\n      </div>\n      <div className=\"container\">\n        <Menu onSelect={(index) => alert(index)}>\n          <MenuItem >\n            link 1\n          </MenuItem>\n          <MenuItem disabled>\n            link 2\n          </MenuItem>\n          <SubMenu title=\"drop down\">\n            <MenuItem>\n              drop down 1\n            </MenuItem>\n            <MenuItem>\n              drop down 2\n            </MenuItem>\n          </SubMenu>\n          <MenuItem>\n            link 3\n          </MenuItem>\n        </Menu>\n        <Menu mode='vertical' defaultOpenSubMenus={['2']}>\n          <MenuItem >\n            link 1\n          </MenuItem>\n          <MenuItem disabled>\n            link 2\n          </MenuItem>\n          <SubMenu title=\"drop down\">\n            <MenuItem>\n              drop down 1\n            </MenuItem>\n            <MenuItem>\n              drop down 2\n            </MenuItem>\n          </SubMenu>\n          <MenuItem>\n            link 3\n          </MenuItem>\n        </Menu>\n      </div>\n      <div className=\"container\">\n        <Icon icon={'coffee'} theme={'primary'} size={'2x'}/>\n        <Icon icon={'check'} theme={'danger'} size={'2x'}/>\n        <Icon icon={'square'} theme={'warning'} size={'2x'}/>\n        <Icon icon={'arrow-left'} theme={'info'} size={'2x'}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}